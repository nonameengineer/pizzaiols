{"version":3,"sources":["webpack:///src/app/modules/shared/navbar/navbar.component.ts","webpack:///src/app/modules/shared/navbar/navbar.component.html","webpack:///src/app/modules/shared/navbar/navbar.module.ts","webpack:///src/app/modules/shared/pizza-card/pizza-card.component.ts","webpack:///src/app/modules/shared/pizza-card/pizza-card.component.html","webpack:///src/app/modules/shared/pizza-card/pizza-card.module.ts","webpack:///src/app/modules/shared/pizza-small-preview/pizza-small-preview.component.ts","webpack:///src/app/modules/shared/pizza-small-preview/pizza-small-preview.component.html","webpack:///src/app/modules/shared/pizza-small-preview/pizza-small-preview.module.ts"],"names":["NavbarComponent","store","unsubscribe","userResponse$","pipe","getUserResponseState","pizzasCount$","getPizzasCountState","next","selector","templateUrl","styleUrls","NavbarModule","declarations","imports","exports","PizzaCardComponent","buttonType","SUCCESS","pizza$","getValue","value","PizzaCardModule","PizzaSmallPreviewComponent","toppings","PizzaSmallPreviewModule"],"mappings":"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","file":"default~modules-basket-basket-module~modules-pizzas-pizzas-module-es5.js","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {RootStoreState, UserStoreSelectors} from '@app/store/root';\nimport {Observable, Subject} from 'rxjs';\nimport {UserResponse} from '@app/models/user/user-response.model';\nimport {takeUntil} from 'rxjs/operators';\nimport {Unsubscribe} from '@app/interfaces/unsubscribe.interface';\nimport {BasketStoreSelectors} from '@app/store/root/client';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit, OnDestroy, Unsubscribe {\n  readonly unsubscribe = new Subject<void>();\n\n  userResponse$: Observable<UserResponse> = this.store.pipe(\n    select(UserStoreSelectors.getUserResponseState),\n    takeUntil(this.unsubscribe)\n  );\n\n  pizzasCount$: Observable<number> = this.store.pipe(\n    select(BasketStoreSelectors.getPizzasCountState),\n    takeUntil(this.unsubscribe)\n  );\n\n  constructor(private store: Store<RootStoreState.State>) { }\n\n  ngOnInit(): void {\n    // TODO: dispatch get user response\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe.next();\n  }\n}\n","<div class=\"navbar\">\n  <div class=\"navbar__logo\">\n    Pizzaiols\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"50\" cy=\"50\" r=\"47\" fill=\"white\" stroke=\"black\" stroke-width=\"6\"/>\n      <line x1=\"25\" y1=\"51\" x2=\"75\" y2=\"51\" stroke=\"black\" stroke-width=\"6\"/>\n      <line y1=\"-3\" x2=\"50\" y2=\"-3\" transform=\"matrix(0.707106 -0.707107 0.707106 0.707107 35 70.3554)\" stroke=\"black\"\n            stroke-width=\"6\"/>\n      <line x1=\"67.234\" y1=\"68.4767\" x2=\"31.8787\" y2=\"33.1213\" stroke=\"black\" stroke-width=\"6\"/>\n      <line x1=\"50\" y1=\"75\" x2=\"50\" y2=\"25\" stroke=\"black\" stroke-width=\"6\"/>\n    </svg>\n  </div>\n  <div class=\"navbar__menu\">\n    <div class=\"navbar__menu__item\" routerLink=\"/pizzas\" routerLinkActive=\"active\">Pizzas</div>\n    <div class=\"navbar__menu__item auth\" routerLink=\"/auth\" routerLinkActive=\"active\">\n      {{ (userResponse$ | async)?.name }}\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path\n          d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\"/>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      </svg>\n    </div>\n    <div class=\"navbar__menu__item basket\" routerLink=\"/basket\" routerLinkActive=\"active\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"32\" viewBox=\"0 0 24 24\" width=\"32\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        <path\n          d=\"M17.21 9l-4.38-6.56c-.19-.28-.51-.42-.83-.42-.32 0-.64.14-.83.43L6.79 9H2c-.55 0-1 .45-1 1 0 .09.01.18.04.27l2.54 9.27c.23.84 1 1.46 1.92 1.46h13c.92 0 1.69-.62 1.93-1.46l2.54-9.27L23 10c0-.55-.45-1-1-1h-4.79zM9 9l3-4.4L15 9H9zm3 8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"/>\n      </svg>\n      <div class=\"basket__count\">\n        {{ pizzasCount$ | async }}\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar.component';\nimport {RouterModule} from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [NavbarComponent]\n})\nexport class NavbarModule { }\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ButtonType} from '@app/ui/v1/button/button.component';\nimport {BehaviorSubject} from 'rxjs';\n\n@Component({\n  selector: 'app-pizza-card',\n  templateUrl: './pizza-card.component.html',\n  styleUrls: ['./pizza-card.component.scss'],\n})\nexport class PizzaCardComponent implements OnInit {\n  readonly buttonType = ButtonType.SUCCESS;\n\n  /**\n   * @input: pizza - Pizza entity.\n   */\n  pizza$ = new BehaviorSubject<any>(null);\n\n  get pizza(): any {\n    return this.pizza$.getValue();\n  }\n\n  @Input()\n  set pizza(value: any) {\n    this.pizza$.next(value);\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container *ngIf=\"(pizza$ | async) as pizza; else preloader\">\n  <div class=\"pizza-card\">\n    <div class=\"pizza-card__preview\">\n      <app-pizza-small-preview class=\"pizza\" [toppings]=\"pizza.toppings\"></app-pizza-small-preview>\n    </div>\n    <div class=\"pizza-card__info\">\n      <div class=\"pizza-card__price\">{{ pizza.price  | currency: \"USD\" }}</div>\n      <div class=\"pizza-card__info__name\">{{ pizza.name }}</div>\n      <div class=\"pizza-card__info__description\">{{ pizza.description }}</div>\n      <div class=\"pizza-card__info__bottom\">\n        <app-ui-v1-button class=\"pizza-card__info__buy-btn\" title=\"Buy\" [type]=\"buttonType\"></app-ui-v1-button>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<ng-template #preloader>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PizzaCardComponent } from './pizza-card.component';\nimport {ButtonModule} from '@app/ui/v1/button/button.module';\nimport {PizzaSmallPreviewModule} from '@app/modules/shared/pizza-small-preview/pizza-small-preview.module';\n\n\n\n@NgModule({\n  declarations: [PizzaCardComponent],\n  imports: [\n    CommonModule,\n    ButtonModule,\n    PizzaSmallPreviewModule\n  ],\n  exports: [PizzaCardComponent]\n})\nexport class PizzaCardModule { }\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-pizza-small-preview',\n  templateUrl: './pizza-small-preview.component.html',\n  styleUrls: ['./pizza-small-preview.component.scss']\n})\nexport class PizzaSmallPreviewComponent implements OnInit {\n  @Input()\n  toppings = [\n    'anchovy',\n    'bacon',\n    'basil',\n    'chili',\n    /*  'mozzarella',\n      'mushroom',\n      'olive',\n      'onion',\n      'pepper',\n      'pepperoni',\n      'sweetcorn',\n      'tomato'*/\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"pizza\">\n  <div class=\"pizza__board\"></div>\n  <div class=\"pizza__base\"></div>\n  <div class=\"pizza__toppings\">\n    <div\n      *ngFor=\"let topping of toppings; let i = index;\"\n      [style.zIndex]=\"i\">\n      <div class=\"pizza__topping pizza__topping--{{topping}}\"></div>\n      <div class=\"pizza__topping pizza__topping--{{topping}}\"></div>\n      <div class=\"pizza__topping pizza__topping--{{topping}}\"></div>\n      <div class=\"pizza__topping pizza__topping--{{topping}}\"></div>\n      <div class=\"pizza__topping pizza__topping--{{topping}}\"></div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PizzaSmallPreviewComponent } from './pizza-small-preview.component';\n\n\n\n@NgModule({\n  declarations: [PizzaSmallPreviewComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [PizzaSmallPreviewComponent]\n})\nexport class PizzaSmallPreviewModule { }\n"]}